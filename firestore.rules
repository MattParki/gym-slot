service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      // Allow users to read/write their own document
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated users to query users by email (needed for staff management)
      allow read: if request.auth != null;
      
      // Allow gym owners to edit users who are associated with their businesses
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['owner', 'business-owner'] &&
        canEditUser(request.auth.uid, userId);
    }

    // Function to check if requesting user can edit target user
    function canEditUser(requestingUserId, targetUserId) {
      let targetUserData = get(/databases/$(database)/documents/users/$(targetUserId)).data;
      let targetUserBusinessIds = targetUserData.businessIds;
      
      // Check if target user is associated with requesting user's business
      return targetUserBusinessIds != null && 
             targetUserBusinessIds.size() > 0 &&
             (
               // Check if requesting user's ID is in target user's businessIds (they own that business)
               requestingUserId in targetUserBusinessIds ||
               // Check if requesting user is an owner of any business the target user is associated with
               targetUserBusinessIds.hasAny(getOwnedBusinesses(requestingUserId))
             );
    }
    
    // Function to get businesses owned by the requesting user
    function getOwnedBusinesses(requestingUserId) {
      // For primary business ownership (business ID = user ID)
      return [requestingUserId];
    }

    match /businesses/{businessId} {
      allow read: if request.auth != null 

      allow create: if request.auth != null 
      allow update: if request.auth != null
    }
    
    match /scheduledClasses/{docId} {
      allow read, write: if request.auth != null;
    }
    
     match /classes/{classId} {
      allow read, write: if request.auth != null;
    }
    
    match /sentEmails/{docId} {
      allow read, write: if true;
    }
    
    match /bookings/{bookingId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;

      allow read: if request.auth != null 
    }
    
    match /scheduledClasses/{scheduledClassId} {
      allow read: if request.auth != null;
      
      allow update: if request.auth != null && 
        request.writeFields.hasOnly(['currentBookings']);
    }
    
    match /gymMembers/{memberId} {
      allow read, write, create, delete: if request.auth != null;
    }
    
   match /categories/{categoryId} {
    allow read, write: if request.auth != null;
  }
  
  match /bookings/{bookingId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      
      allow create: if request.auth != null 
      
      allow update: if request.auth != null 
    }

  }
}